apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'org.jetbrains.dokka'

android {
    compileSdkVersion 27

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    api "com.android.support:appcompat-v7:$android_support_version"
    //testCompile 'junit:junit:4.12'
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    api 'com.squareup.retrofit2:retrofit:2.3.0'
    api "com.squareup.retrofit2:converter-moshi:2.3.0"
}

sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
}

dokka {
    moduleName = "$rootProject.name"
    outputFormat = 'html'
    outputDirectory = "$buildDir/javadoc"
}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    moduleName = "$rootProject.name"
    outputFormat = "javadoc"
    outputDirectory = "$buildDir/dokkaJavadoc"
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError  false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

task docs {
    dependsOn 'dokka'
    dependsOn 'dokkaJavadoc'
    dependsOn 'sourcesJar'
    dependsOn 'javadocJar'
    tasks.findByName('dokka').mustRunAfter 'clean'
    tasks.findByName('dokkaJavadoc').mustRunAfter 'dokka'
    tasks.findByName('sourcesJar').mustRunAfter 'dokkaJavadoc'
    tasks.findByName('javadocJar').mustRunAfter 'sourcesJar'
}
